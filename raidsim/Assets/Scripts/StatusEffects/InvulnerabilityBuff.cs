using System.Collections;
using System.Collections.Generic;
using dev.susybaka.raidsim.Characters;
using UnityEngine;

namespace dev.susybaka.raidsim.StatusEffects
{
    public class InvulnerabilityBuff : StatusEffect
    {
        public enum InvulnerabilityType
        {
            Immunity,
            CannotDie

        }
        public enum InvulnerabilityElementType
        {
            All,
            Physical,
            Magical
        }

        [Header("Invulnerability Status Effect")]
        public InvulnerabilityType m_type = InvulnerabilityType.Immunity;
        public InvulnerabilityElementType m_elementType = InvulnerabilityElementType.All;

        public override void OnApplication(CharacterState state)
        {
            base.OnApplication(state);

            if (m_type == InvulnerabilityType.Immunity)
            {
                state.invulnerable.SetFlag(data.statusName, true);
            }
            else if (m_type == InvulnerabilityType.CannotDie)
            {
                state.canDie.SetFlag(data.statusName, false);
            }
        }

        public override void OnExpire(CharacterState state)
        {
            base.OnExpire(state);

            if (m_type == InvulnerabilityType.Immunity)
            {
                state.invulnerable.RemoveFlag(data.statusName);
            }
            else if (m_type == InvulnerabilityType.CannotDie)
            {
                state.canDie.RemoveFlag(data.statusName);
            }
        }

        public override void OnCleanse(CharacterState state)
        {
            base.OnCleanse(state);

            if (m_type == InvulnerabilityType.Immunity)
            {
                state.invulnerable.RemoveFlag(data.statusName);
            }
            else if (m_type == InvulnerabilityType.CannotDie)
            {
                state.canDie.RemoveFlag(data.statusName);
            }
        }
    }
}